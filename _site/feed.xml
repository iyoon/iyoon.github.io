<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hyungwon ,Yoon</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://iyoon.github.io/</link>
    <atom:link href="http://iyoon.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 05 Jun 2015 15:19:45 +0900</pubDate>
    <lastBuildDate>Fri, 05 Jun 2015 15:19:45 +0900</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Apache Tika로 MIME Type 알아내기</title>
        <description>&lt;h1 id=&quot;mime-type&quot;&gt;MIME Type이란?&lt;/h1&gt;

&lt;p&gt;MIME으로 인코딩한 파일은 Content-Type 정보를 가지고 있다.&lt;br /&gt;
MIME Type은 “파일종류/파일포맷” 형태를 가지고 파일 형식에 따라 구동 할 프로그램을 구분지을 수 있도록 해준다.  &lt;/p&gt;

&lt;h1 id=&quot;apache-tika&quot;&gt;Apache Tika&lt;/h1&gt;

&lt;p&gt;Apache Tika는 다양한 문서에서 메타정보와 컨텐츠를 추출 하기 위해 사용할 수 있는 라이브러리 이다.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Tika Download&lt;/strong&gt;&lt;br /&gt;
Apache Tika는 https://tika.apache.org/download.html 에서 다운로드 받을 수 있다. &lt;/p&gt;

&lt;h1 id=&quot;maven--&quot;&gt;Maven에서 추가 하기&lt;/h1&gt;
&lt;p&gt;maven을 이용한다면 아래의 내용을 pom.xml에 추가하면 된다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.tika&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;tika-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.tika&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;tika-parsers&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;ant-&quot;&gt;Ant에서 추가하기&lt;/h1&gt;

&lt;p&gt;ant를 사용하는 프로젝트인 경우 jar 파일을 다운로드 받아서 아래와 같이 추가 해준다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;classpath&amp;gt;&lt;/span&gt;
  ... &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- your other classpath entries --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- either: --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;pathelement&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;location=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;path/to/tika-core-${tika.version}.jar&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- or: --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;pathelement&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;location=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;path/to/tika-app-${tika.version}.jar&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/classpath&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;자세한 내용은 Apache Tika의 Getting Started 문서를 참고한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://tika.apache.org/1.8/gettingstarted.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;tika-java-&quot;&gt;Tika Java 코드&lt;/h1&gt;

&lt;p&gt;Tika 객체를 생성하여서 detect 메소드를 활용하면 File의 MIME Type을 String 문자열로 리턴 받을 수 있다. &lt;br /&gt;
다른 라이브러리를 이용하면 확장자를 통해 MIME Type을 판별하거나 정확한 MIME Type을 얻기가 어려운데… &lt;br /&gt;
Tika는 파일의 확장자를 변조하거나 하여도 정확한 MIME Type을 알려준다.   &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isValidMimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// image file, pdf, excel, text, zip 파일에 해당하는 mime type이 아니면 업로드 불가&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Tika&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tika&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Tika&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tika&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;detect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isPermittedMimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isPermittedMimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validMimeTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;생략&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validMimeType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validMimeTypes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validMimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tika에서 정의한 Mime Type의 목록을 확인 하려면 tika-mimetypes.xml 내용을 확인 하면 된다.   &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tika MIME Type&lt;br /&gt;
&lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/org.apache.tika/tika-core/0.6/org/apache/tika/mime/tika-mimetypes.xml&quot;&gt;tika-mimetypes.xml&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;mime-type--&quot;&gt;MIME Type 포맷 규칙&lt;/h1&gt;

&lt;p&gt;Mime Type의 포맷은 일정한 규칙이 있다. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;“파일종류/파일포맷” 형식으로 이름이 지어진다. &lt;/li&gt;
  &lt;li&gt;x- 로 시작하는 (prefix) MIME Type은 non-standard한 MIME 이다. &lt;/li&gt;
  &lt;li&gt;vnd 로 시작하는 MIME Type은 Vendor specific 한 Type 으로 벤더사에서 제공하는 MIME Type 이다. &lt;br /&gt;
예를 들어 마이크로 소프트사의 msword는 MIME Type이 “application/vnd.ms-word” 이다. &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.freeformatter.com/mime-types-list.html&quot;&gt;MIME Type 설명과 포맷규칙&lt;/a&gt;&lt;br /&gt;
  &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/org.apache.tika/tika-core/0.6/org/apache/tika/mime/tika-mimetypes.xml&quot;&gt;MIME Type 리스트&lt;/a&gt;]&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 01 Jun 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/06/01/ApacheTika.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/06/01/ApacheTika.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Javascript 정복하기1</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;프론트엔드 개발자를 위한 자바스크립트 프로그래밍 JavaScript for Web Developers (저자: 니콜라스 자카스)을 읽고 공부한 내용입니다. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;1장. 자바스크립트란 무엇인가&lt;/h2&gt;

&lt;h1 id=&quot;section-1&quot;&gt;자바스크립트의 탄생&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;모뎀 시절 서버를 통한 유효성 검사는 네트워크 성능이 너무 안좋았기 때문에 오랜 시간이 걸리는 문제가 있었다
    &lt;ul&gt;
      &lt;li&gt;넷스케이프와 선 마이크로시스템즈의 협력으로 자바스크립트 1.0 탄생  &lt;/li&gt;
      &lt;li&gt;넷스케이프의 자바스크립트 vs 마이크로소프트의 JScript  &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ecmascript&quot;&gt;ECMAScript&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;두 가지 버전의 자바스크립트는 업계에 큰 혼란을 가져왔고, 자바스크립트의 표준화의 필요성을 대두시켰다. &lt;/li&gt;
  &lt;li&gt;ECMAScript의 탄생
    &lt;ul&gt;
      &lt;li&gt;문법과 의미를 표준화 하여 플랫폼/제조사에 중립인 스크립트 언어&lt;/li&gt;
      &lt;li&gt;ECMAScript는 문법/타입/선언문/키워드와 같은 언어의 저수준 부분을 정의&lt;/li&gt;
      &lt;li&gt;‘판’ 으로 버전을 관리 &lt;code&gt;ECMA-262 3판&lt;/code&gt; 부터 프로그래밍 언어로서의 면모를 갖추기 시작하였다. &lt;/li&gt;
      &lt;li&gt;최신판은 ECMAScript 5판 &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;javascript&quot;&gt;Javascript&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Javascript는 ECMAScript를 기반으로 구현한 스크립트 언어&lt;/li&gt;
  &lt;li&gt;Javascript = &lt;code&gt;ECMAScript&lt;/code&gt; + &lt;code&gt;DOM&lt;/code&gt; + &lt;code&gt;BOM&lt;/code&gt; 
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;DOM&lt;/code&gt; 은 XML을 HTML로 사용 할 수 있도록 확장하여 노드를 조작할 수 있도록 한다.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;BOM&lt;/code&gt; 은 브라우저 창의 접근과 제어를 할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;html--&quot;&gt;2장. HTML 속의 스크립트&lt;/h2&gt;

&lt;h1 id=&quot;section-2&quot;&gt;자바 스크립트 추가하기&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;페이지에 직접 작성하는 방법&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;JavaScript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;language는 최근 브라우저에서는 아예 값을 무시한다.(폐기됨)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;“text/javascript”가 기본값이므로 생략해도 무방하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;외부파일로 추가하는 방법&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;../common.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;다른 도메인의 스크립트 파일도 사용이 가능하다.&lt;/li&gt;
  &lt;li&gt;src 속성을 추가하면 스크립트 내부에는 주석으로 사용이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;script-&quot;&gt;&amp;lt;script&amp;gt; 요소&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소 내부에서는 위에서 아래로 차례로 해석 &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소 내부의 코드를 전체 평가하기 전에는 페이지의 나머지 콘텐츠는 불러오거나 표시하지 않는다.&lt;/li&gt;
  &lt;li&gt;외부파일의 경우 외부 파일을 다운로드를 받고 파일 전체를 해석하는 동안 페이지 렌더링이 시작되지 않는다.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 요소 만나면서 페이지 렌더링이 시작되므로 페이지가 로드 이후에 사용될 스크립트는 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 요소의 페이지 콘텐츠 마지막에 쓴다. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;script--1&quot;&gt;&amp;lt;script&amp;gt; 속성&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;defer&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;example.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;코드는 즉시 내려받지만 실행은 &amp;lt;/html&amp;gt; 을 만날 때 까지 지연 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;async&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;example.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;코드는 즉시 내려받지만 실행은 &amp;lt;/html&amp;gt; 을 만날 때 까지 지연 한다.&lt;/li&gt;
  &lt;li&gt;스크립트가 마크업 순서대로 실행됨을 보장하지 않는다. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;※ 위의 2개 속성은 &lt;code&gt;src&lt;/code&gt; 속성이 있는 경우에만 유효합니다.&lt;/strong&gt; &lt;/p&gt;

&lt;h1 id=&quot;section-3&quot;&gt;자바스크립트를 외부 파일로 관리하면 얻는 이점?&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;관리하기가 쉽다.&lt;/strong&gt; &lt;br /&gt;
 외부파일로 분리하지 않으면 html 페이지에 자바스크립트 코드와 마크업이 섞이므로 관리가 어렵다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;캐싱 활용&lt;/strong&gt; &lt;br /&gt;
 브라우저는 외부에서 연결된 자바스크립트 파일을 모두 캐시한다. 서로 다른 페이지에서 같은 자바스크립트 파일을 사용할 때 캐시에서 불러오므로 
 페이지를 불러오는 시간이 짧아진다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;xhtml에서 CDATA 섹션이나 주석 편법을 쓰지 않아도 된다.&lt;/strong&gt;  &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;xhtml-cdata-&quot;&gt;xhtml과 CDATA 섹션&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;양수&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;음수&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-4&quot;&gt;주석 편법&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소가 처음 도입이 되었을 때 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소를 지원하지 않는 브라우저는 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소의 콘텐츠를 페이지에 그대로 출력하는 문제가 있었다.&lt;br /&gt;
&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소를 지원하지 않는 브라우저에서는 콘텐츠를 표시하지 않도록 하기 위해 아래와 같이 &lt;code&gt;&amp;lt;!-- //--&amp;gt;&lt;/code&gt;로 묶는 방법을 사용한다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-5&quot;&gt;문서모드&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://iyoon.github.io/jekyll/update/2015/04/05/htmldoctype.html&quot;&gt;브라우저 문서모드&lt;/a&gt; 는 이 링크를 확인하세요. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;noscript&quot;&gt;&amp;lt;noscript&amp;gt;요소&lt;/h1&gt;
&lt;p&gt;브라우저가 자바스크립트를 지원하지 않을 때 대체 콘텐츠를 제공하기 위해 만들어졌다.  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;브라우저가 스크립트를 지원하지 않을 때  &lt;/li&gt;
  &lt;li&gt;브라우저의 스크립트 지원이 꺼져 있을 때 &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt; This page requires a javascript-enabled browser. &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section-6&quot;&gt;4장. 변수와 스코프, 메모리&lt;/h2&gt;

&lt;h1 id=&quot;ecmascript--&quot;&gt;ECMAScript 변수의 특징&lt;/h1&gt;
&lt;p&gt;자바스크립트의 변수의 값과 데이터 타입은 느슨한 타입을 취하므로 실행 도중 언제든지 바뀔 수 있다. &lt;/p&gt;

&lt;h1 id=&quot;section-7&quot;&gt;원시 값과 참조 값&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;원시값&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5가지 원시 데이터 (undefined, null, boolean, number, string) 가 있다.&lt;/li&gt;
  &lt;li&gt;Stack&lt;/li&gt;
  &lt;li&gt;값 복사: 저장된 값을 새로 생성 후 새로운 변수에 복사 &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;typeof&lt;/code&gt; 을 통해 원시값의 타입을 알 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hyungwon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;			&lt;span class=&quot;c1&quot;&gt;// string &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// boolean&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// number&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;					&lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// null&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;			&lt;span class=&quot;c1&quot;&gt;// object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);};&lt;/span&gt; 	&lt;span class=&quot;c1&quot;&gt;// function&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;원시 값에는 동적 프로퍼티가 없다. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hyungwon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Undefined&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;참조값&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;객체를 가르키는 참조를 저장하는 변수 &lt;/li&gt;
  &lt;li&gt;Heap&lt;/li&gt;
  &lt;li&gt;값 복사: 힙에 저장된 객체를 가르키는 포인터를 복사한다. 참조만 저장 할 뿐 객체 자체를 복사하는 건 아니다!&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;hyungwon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// hyungwon&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// hyungwon&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;instanceof&lt;/code&gt; 을 통해 참조 값의 참조 데이터형을 알 수 있다. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// true &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;참조형에서는 &lt;code&gt;동적 프로퍼티&lt;/code&gt; 추가/삭제/변경이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;hyungwon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// hyungwon&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-8&quot;&gt;함수에서의 매개변수 전달&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;ECMAScript의 함수 매개변수는 모두 값으로 전달한다. 
    &lt;ul&gt;
      &lt;li&gt;함수 외부에 있는 값은 함수 내부의 매개변수로 복사 된다. &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;참조 값인 경우에는? 매개 변수가 참조 형태로 전달 된다?? &lt;strong&gt;&lt;em&gt;No!!&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hyungwon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// obj가 가르키는 것은 힙 메모리의 전역 객체 &lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// hyungwon&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;얼핏 보면 참조 변수의 값을 변경하는 것 같다. 하지만 다음의 예제를 보자.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hyungwon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;yoon&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// hyungwon&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;ECAMScript의 함수 매개변수는 지역변수와 다를 것이 없다고 생각하면 쉽다.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-9&quot;&gt;실행 컨텍스트&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;실행 컨텍스트&lt;/code&gt; 는 변수나 함수에 접근 할 수 있는지 어떻게 행동하는지를 규정한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가장 바깥쪽에 존재하는 &lt;code&gt;실행 컨텍스트&lt;/code&gt; 는 &lt;code&gt;전역 컨텍스트&lt;/code&gt; 이다. 웹 브라우저에서 &lt;code&gt;window&lt;/code&gt; 라 부른다. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;life-cycle&quot;&gt;실행 컨텍스트의 life cycle&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;함수를 호출하면 독자적인 &lt;code&gt;실행 컨텍스트&lt;/code&gt; 가 생성 된다.   &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;실행 컨텍스트&lt;/code&gt; 는 &lt;code&gt;스택&lt;/code&gt; 에 쌓인다.&lt;/li&gt;
  &lt;li&gt;함수 실행이 끝나면 해당 컨텍스트는 스택에서 꺼내고 컨텍스트 내부에서 정의된 변수와 함수를 모두 파괴한다.&lt;/li&gt;
  &lt;li&gt;컨트롤을 이전 컨텍스트 반환한다. &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;전역 컨텍스트&lt;/code&gt; 의 경우 웹페이지에서 나가거나 브라우저가 닫힐 때 까지 유지된다.  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-10&quot;&gt;컨텍스트의 내부&lt;/h1&gt;
&lt;p&gt;컨텍스트에는 &lt;code&gt;Variable Object&lt;/code&gt;, &lt;code&gt;Scope Chain&lt;/code&gt;, &lt;code&gt;this value&lt;/code&gt; 가 있다.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Varialble Obejct&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
로컬 변수와 함수 매개변수(arguments) 정보를 포함한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;num1 : 10&lt;/li&gt;
  &lt;li&gt;num2 : 20 &lt;/li&gt;
  &lt;li&gt;arguments : {0:10, 1:20}&lt;/li&gt;
  &lt;li&gt;sum : 30 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Scope Chain&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;실행 컨텍스트가 접근 할 수 있는 모든 변수와 함수에 순서를 정의 한다. &lt;/li&gt;
  &lt;li&gt;함수 실행 중 로컬변수를 만나면 아래와 같은 순서로 찾아간다. 
    &lt;ul&gt;
      &lt;li&gt;현재 스코프 활성화 객체(activation object) -&amp;gt; 부모 컨텍스트 -&amp;gt; 부모의 부모 컨텍스트 -&amp;gt; … -&amp;gt; 전역 컨텍스트   &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;컨텍스트는 스코프 체인을 따라 상위 컨테스트에서 변수나 함수를 검색 할 수 있다. &lt;/li&gt;
  &lt;li&gt;그 반대로 상위 컨텍스트에서 하위 컨텍스트 참조는 불가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;this value&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;실행 컨텍스트를 가르키는 것. 일반 객체언어에서 객체의 this, self 와 비슷 &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-11&quot;&gt;자바스크립트에서 주의 해야 할 스코프&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;자바스크립트에는 블록 레벨 스코프가 없다.&lt;/strong&gt; &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// blue&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;보통 C,Java와 같은 언어에는 블록마다 스코프가 생성 되어 블록이 끝나면 파괴된다.&lt;br /&gt;
하지만, 자바스크립트에서는 블록 레벨 스코프가 없으므로 블록 내 지역변수가 파괴되지 않는다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;지역 변수는 &lt;code&gt;var&lt;/code&gt; 키워드로 선언 하자.&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;var&lt;/code&gt; 키워드로 변수를 선언하면 함수의 가장 가까운 로컬 컨텍스트에 변수가 추가 된다.&lt;br /&gt;
&lt;code&gt;var&lt;/code&gt; 가 없다면 &lt;code&gt;전역 컨텍스트&lt;/code&gt; 에 변수가 추가된다.  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 		&lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 30&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-12&quot;&gt;식별자 검색&lt;/h1&gt;
&lt;p&gt;컨텍스트 안에서 식별자를 참조 하면 검색을 하게 되는데 검색은 현재 컨텍스트 부터 스코프 체인을 따라 검색한다.&lt;br /&gt;
식별자를 찾으면 더 이상 검색을 하지 않기 때문에 부모 컨텍스트에 해당 식별자가 있더라도 참조 할 수 없다.&lt;br /&gt;
전역 컨텍스트의 변수를 참조하려면 &lt;code&gt;window.color&lt;/code&gt; 와 같이 명시해야 한다.  &lt;/p&gt;

&lt;h1 id=&quot;section-13&quot;&gt;가비지 콜렉션&lt;/h1&gt;
&lt;p&gt;웹 브라우저에서 사용 할 수 있는 메모리는 일반적인 데스크톱 애플리케이션의 가용 메모리에 비해 매우 적다.&lt;br /&gt;
자바스크립트가 시스템 메모리를 전부 사용해서 운영체제를 다운시키는 일을 방지 하기 위해서 이다.&lt;br /&gt;
따라서 성능에 영향을 최소화하면서 주기적으로 메모리 정리를 하는 가비지콜레터가 중요하다.  &lt;/p&gt;

&lt;h1 id=&quot;section-14&quot;&gt;가비지콜렉터의 2가지 방식: 표시하고 지우기, 참조 카운팅&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;표시하고 지우기&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;1.가비지 컬렉터가 작동하면 메모리에 저장된 변수 전체에 표시를 한다.(on)&lt;/p&gt;

&lt;p&gt;2.해당 변수가 있는 컨텍스트의 변수와 컨텍스트에 있는 변수가 참조하는 변수는 표시를 제거한다.&lt;/p&gt;

&lt;p&gt;3.표시가 남아 있는 변수는 삭제 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;참조카운팅&lt;/strong&gt;   &lt;/p&gt;

&lt;p&gt;1.변수를 선언하고 참조 값이 할당되면 참조 카운트 = 1&lt;/p&gt;

&lt;p&gt;2.다른 변수에 같은 참조 값이 할당 되면 참조 카운트 + 1&lt;/p&gt;

&lt;p&gt;3.다른 참조 값으로 덮어씌워 지면 참조 카운트 - 1&lt;/p&gt;

&lt;p&gt;4.참조 값이 0이 되면 어떤 변수에서도 참조하지 않는 값이므로 삭제한다. &lt;/p&gt;

&lt;p&gt;참조 카운팅은 &lt;code&gt;순환 참조&lt;/code&gt; 문제가 있다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;problem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objectA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// objectA: 1&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objectB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// objectB: 1&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;objectA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someOtherObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objectB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// objectB : 2&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;objectB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anotherObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objectA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// objectA : 2 &lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;각 object의 프로퍼티에서 서로를 참조하면서 참조 카운팅이 0이 안되기 때문에 메모리 해제가 안된다. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;결론은….&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;코드실행에 필요한 데이터만 유지하기 위해서는 필요 없어진 데이터는 &lt;code&gt;null&lt;/code&gt; 을 할당하여 참조를 제거하는 편이 좋다. &lt;br /&gt;
지역 변수의 경우에는 컨텍스트가 파괴될 때 같이 참조가 제거 되지만, 전역 변수나 전역 객체의 프로퍼티를 위주로 삭제하면 된다.&lt;/p&gt;

</description>
        <pubDate>Tue, 26 May 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/05/26/javascript.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/05/26/javascript.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>quartz cron expression </title>
        <description>&lt;h2 id=&quot;quartz-cron-expression&quot;&gt;quartz cron expression&lt;/h2&gt;

&lt;p&gt;cron expression 은 6필드 또는 7필드로 구성이되고 각 글자는 공백으로 구분짓는다. &lt;br /&gt;
표현식은 숫자와 특수문자 (special charaters)로 구성된다. 마지막 년도 필드는 필수 입력이 아니다.  &lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;필드이름&lt;/th&gt;
      &lt;th&gt;필수&lt;/th&gt;
      &lt;th&gt;범위&lt;/th&gt;
      &lt;th&gt;사용할 수있는 특수문자&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;초&lt;/td&gt;
      &lt;td&gt;YES&lt;/td&gt;
      &lt;td&gt;0-59&lt;/td&gt;
      &lt;td&gt;, - * /&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;분&lt;/td&gt;
      &lt;td&gt;YES&lt;/td&gt;
      &lt;td&gt;0-59&lt;/td&gt;
      &lt;td&gt;, - * /&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;시간&lt;/td&gt;
      &lt;td&gt;YES&lt;/td&gt;
      &lt;td&gt;0-23&lt;/td&gt;
      &lt;td&gt;, - * /&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;일&lt;/td&gt;
      &lt;td&gt;YES&lt;/td&gt;
      &lt;td&gt;1-31&lt;/td&gt;
      &lt;td&gt;, - * ? / L W&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;월&lt;/td&gt;
      &lt;td&gt;YES&lt;/td&gt;
      &lt;td&gt;1-12 또는 JAN-DEC&lt;/td&gt;
      &lt;td&gt;, - * /&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;요일&lt;/td&gt;
      &lt;td&gt;1-7 또는 SUN-SAT&lt;/td&gt;
      &lt;td&gt;0-59&lt;/td&gt;
      &lt;td&gt;, - * ? / L W&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;년도&lt;/td&gt;
      &lt;td&gt;NO&lt;/td&gt;
      &lt;td&gt;empty, 1970-2099&lt;/td&gt;
      &lt;td&gt;, - * /&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;section&quot;&gt;특수문자&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;* : 모든값에 매칭 매 분/매 시 마다 수행할 때 사용한다. &lt;/li&gt;
  &lt;li&gt;? : 값을 정의 하지 않을 때 사용한다.  &lt;/li&gt;
  &lt;li&gt;- : 범위를 지정할 때 사용한다. 시간 필드에 사용한다면 1-5 로 지정하면 1시에서 5시에 수행된다.&lt;/li&gt;
  &lt;li&gt;, : 나열하여 지정할 때 사용한다. 시간 필으데 사용한다면 1,5,7 로 지정하면 1시,5시,7시에 수행된다. &lt;/li&gt;
  &lt;li&gt;/ : 증가값을 정의할 때 사용된다. 예를 들어 분 필드에 0/10 으로 지정하면 0분에 시작하여 10분마다 수행된다.&lt;/li&gt;
  &lt;li&gt;L(Last): 달의 마지막날짜, 주의 마지막날짜를 지정하여 수행 할 때 사용한다.&lt;/li&gt;
  &lt;li&gt;W (Weekday): 주어진 날짜의 가장 가까운 평일(월~금)을 지정하여 수행할 때 사용한다. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;n---&quot;&gt;특정 시간대에 n 분마다 수행되도록 설정하기&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0 0/2 22-23,0-4 * * ?&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;매일 오후10시 부터 새벽 5시까지 2분마다 수행이 되도록 설정하였다.  해당 정의를 하면서 실수 했던 점은 아래와 같다. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;새벽 5시까지 수행되도록 할려면 0 - 5 가 아니라 0 - 4 이다.  &lt;/li&gt;
  &lt;li&gt;오후 10시 부터 새벽 5시는 22-4로 범위를 지정하면 원하는 대로 수행이 되지 않는다.&lt;br /&gt;
따라서 시간 필드에서 자정을 중간에 포함하는 범위를 지정할 경우에는 나누어서 범위를 표현해야 한다. &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;cron-expression-test--generator-&quot;&gt;cron expression TEST 와 Generator 사이트&lt;/h1&gt;
&lt;p&gt;http://www.cronmaker.com/ 사이트에서 테스트와 생성이 가능하다. 
테스트는 입력한 표현식의 수행되는 시간을 출력해준다. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료&lt;br /&gt;
&lt;a href=&quot;http://www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger&quot;&gt;quartz cron expression&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 18 May 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/05/18/cron-expression.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/05/18/cron-expression.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>rsync 설정하기</title>
        <description>&lt;h2 id=&quot;rsync-&quot;&gt;rsync 설정하기&lt;/h2&gt;
&lt;p&gt;서버 간 파일의 동기화를 할 때 rsync 설정으로 간단히 동기화를 할 수 있다.&lt;br /&gt;
이번 포스트에서 설정 방법에 대해서 정리를 해보았다.  &lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;[서버 설정]&lt;/h2&gt;

&lt;h1 id=&quot;rsync--&quot;&gt;rsync 설정파일 추가&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vi /etc/rsyncd.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 서비스명 &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sample-service&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 동기화 할 디렉토리 경로 &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/path/file
&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root
&lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root
use &lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yes
&lt;span class=&quot;nb&quot;&gt;readonly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yes
&lt;span class=&quot;c&quot;&gt;# 호스트(클라이언트)IP  &lt;/span&gt;
hosts &lt;span class=&quot;nv&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;xinetd-rsync--&quot;&gt;xinetd rsync 설정파일 수정&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vi /etc/xinetd.d/rsync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#disable = yes &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;disable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; no&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;xinetd-&quot;&gt;xinetd 재구동하기&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/etc/init.d/xinetd stop 
/etc/init.d/xinetd start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-1&quot;&gt;방화벽 열기&lt;/h1&gt;
&lt;p&gt;rsync를 통해 서버와 클라이언트간 동기화 할 때 사용되는 포트를 방화벽에서 열어준다.  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vi /etc/sysconfig/iptables&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 873 -j ACCEPT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-2&quot;&gt;방화벽 재시작하기&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/etc/init.d/iptables stop 
/etc/init.d/iptables start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;[클라이언트 설정]&lt;/h2&gt;

&lt;p&gt;주기적으로 동기화를 하기위해서 crontab에 rsync 명령을 추가한다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vi crontab - e&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;* * * * * rsync -avz 192.168.0.2::sample-service /path/file&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이렇게 설정 하면 192.168.0.2 (서버IP)에서 sample-service 이라는 서비스(서버의 rsyncd.conf에 정의됨)에 설정된 디렉토리의 파일을 
클라이언트의 /path/file 디렉토리의 파일을 동기화 해준다. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료&lt;br /&gt;
&lt;a href=&quot;http://calflove.tistory.com/337&quot;&gt;서버들간 데이터 동기화 방안 중 가장 간단한 rsync 설정방법&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://fruitdev.tistory.com/38&quot;&gt;Rsync 설치하기&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 11 May 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/05/11/rsync.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/05/11/rsync.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>SQL Tuning</title>
        <description>&lt;h1 id=&quot;issue&quot;&gt;Issue&lt;/h1&gt;
&lt;p&gt;특정 페이지의 조회가 매우 느리다는 유지보수 건을 처리하게 되었다.
서비스 페이지에서 확인 해본 결과 조회를 하는데 1분이상 걸리고 때로는 time out이 났다. &lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;확인&lt;/h1&gt;
&lt;p&gt;페이지 조회의 쿼리를 질의브라우저에서 실행해본 결과 질의 시간도 5초이내로 수행되고 검색결과도 많지 않았다. 
쿼리에 문제가 없는 것으로 생각하고 Java에서 lock이 걸리는 것이 있는지 확인을 해보았지만 lock이 걸린것도 아니었다. 
실행 결과 수도 100건이하였고, 단순히 리스트를 조회하여 화면에 출력하는 부분이어서 처리 수행시간이 오래 걸릴 부분이 아니었다.  &lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;원인&lt;/h1&gt;
&lt;p&gt;DBA님을 통해 확인해본 결과 큐브리드는 DB에 직접 연결을 하는것이 아니라 브로커(broker)를 통해서 질의를 수행하고 처리결과를 사용자에게 준다. 
각 브로커는 접속포트별로 있으며, 브로커별로 별도의 쿼리플랜을 캐쉬에 저장한다고 한다. 
따라서 서비스단의 브로커의 쿼리플랜이 질의 브라우저에서 수행한 브로커의 쿼리플랜과 달라서 수행시간에 차이가 있었던 것이다.&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;해결&lt;/h1&gt;
&lt;p&gt;쿼리 플랜을 확인 해본 결과 데이터가 많은 매핑테이블에서 full scan이 있었다.
index scan이 될 수 있도록 index를 변경하였지만 그럼에도 플랜이 full scan이 되는 문제가 있었다.
플랜을 수정하기 위해  /&lt;em&gt;+USE_IDX ORDERED&lt;/em&gt;/ 쿼리 힌트를 추가하고 나니 질의 속도가 매우 빨라졌고 해당 이슈를 해결 할 수 있었다. &lt;/p&gt;
</description>
        <pubDate>Mon, 04 May 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/05/04/SQLTuning.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/05/04/SQLTuning.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>sublime-jekyll 플러그인 </title>
        <description>&lt;p&gt;블로그에 글을 올릴 때 에디터로 Sublime Text를 사용하고 있다. jekyll 플러그인이 있어 사용해보았다. &lt;/p&gt;

&lt;h2 id=&quot;sublime-jekyll-&quot;&gt;sublime-jekyll 플러그인&lt;/h2&gt;

&lt;h1 id=&quot;install-osx-&quot;&gt;Install (OSX) 하기&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;PackageControl을 연다. command + shift + p (Tools &amp;gt; Commmand Palette menu) &lt;/li&gt;
  &lt;li&gt;Package Control : Install Package 선택 &lt;/li&gt;
  &lt;li&gt;Package Control이 없다면 Package Control부터 설치한다.&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/installation&quot;&gt;Install PackageControl&lt;/a&gt; 에서 사용 중인 버전 (Sublime Text 2 Or Sublime Text3) 스크립트 복사 &lt;/li&gt;
      &lt;li&gt;View &amp;gt; Show Console(Ctrl + ‘) 복사한 스크립트를 실행하 Package Control 이 설치된다.   &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Pacakcge 를 선택하면 나오는 검색 창에서 jekyll로 검색하여 나오는 jekyll을 설치한다. &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section&quot;&gt;설정하기&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Preference &amp;gt; Pacakge Settings &amp;gt; Jekyll &amp;gt; Settings - Users&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;posts_path, drafts_path를 설정한다. 
그외 default 설정이나 날짜 포맷 등을 필요에 따라 설정 할 수 있다. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{

    // This should point to your &amp;quot;_posts&amp;quot; directory.
    // NOTE: This should be an absolute path. Also, the path should
    // match your system convention. For example, Windows machines should
    // have a path similar to &amp;quot;C:\\Users\\username\\site\\_posts&amp;quot;.
    // *nix systems should have a path similar to &amp;quot;/Users/username/site/_posts&amp;quot;.
    &amp;quot;posts_path&amp;quot;: &amp;quot;/Users/nhnent/iyoon.github.com/_posts&amp;quot;,

    // This should point to your &amp;quot;_drafts&amp;quot; directory.
    // NOTE: This should be an absolute path. Also, the path should
    // match your system convention. For example, Windows machines should
    // have a path similar to &amp;quot;C:\\Users\\username\\site\\_drafts&amp;quot;.
    // *nix systems should have a path similar to &amp;quot;/Users/username/site/_drafts&amp;quot;.
    &amp;quot;drafts_path&amp;quot;: &amp;quot;/Users/nhnent/iyoon.github.com/_drafts&amp;quot;,

    // If you have multiple Jekyll blogs, but don&amp;#39;t use Sumblime Projects,
    // you can optionally have sublime-jekyll look for the `_posts` or `_drafts`
    // folders open in your sidebar. This should have a value of true or false.
    &amp;quot;automatically_find_paths&amp;quot;: false,

    // This string value should represent the default syntax for a new post.
    // Valid options are: &amp;quot;Markdown&amp;quot;, &amp;quot;Textile&amp;quot;
    &amp;quot;default_post_syntax&amp;quot;: &amp;quot;Markdown&amp;quot;,

    /** *****************************************************************************
     * Post Front-matter Defaults
     *
     * Set these values to make your life easier when composing new posts. This is
     * similar to setting your defaults as part of the `_config.yml` file:
     *
     * http://jekyllrb.com/docs/configuration/#front-matter-defaults
     * ******************************************************************************
     */

    // This string value should represent the default layout for new posts.
    &amp;quot;default_post_layout&amp;quot;: &amp;quot;&amp;quot;,

    // This value should represent the default categories for new posts.
    // Each category should be entered as a list item in string format
    // with commas separating values [&amp;quot;cat1&amp;quot;, &amp;quot;cat2&amp;quot;]. To remove this key
    // from your front-matter completely, pass a value of `null`.
    &amp;quot;default_post_categories&amp;quot;: [],

    // This value should represent the default tags for new posts.
    // Each tag should be entered as a list item in string format
    // with commas separating values [&amp;quot;tag1&amp;quot;, &amp;quot;tag2&amp;quot;]. To remove this key
    // from your front-matter completely, pass a value of `null`.
    &amp;quot;default_post_tags&amp;quot;: [],

    // A boolean specifying if you want new posts to be marked as published.
    // To remove this key from your front-matter completely, pass a value of `null`.
    &amp;quot;default_post_published&amp;quot;: true,

    // If you need to add additional front-matter `key: value` information to
    // your posts, you can store them in a dictionary object using a format
    // like {&amp;quot;foo&amp;quot;: &amp;quot;bar&amp;quot;, &amp;quot;baz&amp;quot;: &amp;quot;qux&amp;quot;}. This dictionary will be appended to
    // any of the enabled default keys above (Reminder: the `title` and `layout`
    // keys will always be included, so **DO NOT** include them in the extras dictionary).
    &amp;quot;default_post_extras&amp;quot;: {},

    /** ***********************************************************************************
     * If for some reason you want to change the way either the date
     * or the datetime string is formatted, you can override those formats
     * here using valid Python datetime.strftime() format codes.
     *
     * If you need a refresher on these codes, have a look at the Python
     * documentation found here:
     *
     * http://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior
     * ******************************************************************************
     */

    // A valid Python strftime string
    &amp;quot;insert_date_format&amp;quot;: &amp;quot;%Y-%m-%d&amp;quot;,

    // A valid Python strftime string
    &amp;quot;insert_datetime_format&amp;quot;: &amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;

}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-1&quot;&gt;기능&lt;/h1&gt;

&lt;p&gt;Command + shift + p 에서 jekyll 플러그인의 기능을 사용 할 수 있다. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jekyll: New post &lt;/li&gt;
  &lt;li&gt;Jekyll: New draft &lt;/li&gt;
  &lt;li&gt;Jekyll: Open post&lt;/li&gt;
  &lt;li&gt;Jekyll: Open draft&lt;/li&gt;
  &lt;li&gt;Jekyll: Insert current date &lt;/li&gt;
  &lt;li&gt;Jekyll: Insert current datetime &lt;/li&gt;
  &lt;li&gt;Jekyll: Promote draft to post&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;syntax-&quot;&gt;Syntax 강조&lt;/h1&gt;
&lt;p&gt;Set Syntax:Markdown(Jekyll)&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;자동완성&lt;/h1&gt;

&lt;p&gt;축약형을 입력한 후 Tab을 누르면 자동완성이 된다.&lt;br /&gt;
hightlight + Tab = {% highlight %}{% endhighlight %} &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;assign: {% assign a = b %}&lt;/li&gt;
  &lt;li&gt;capture: {% capture %}{% endcapture %}&lt;/li&gt;
  &lt;li&gt;case: {% case %}{% endcase %}&lt;/li&gt;
  &lt;li&gt;comment: {% comment %}{% endcomment %}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;https://packagecontrol.io/packages/Jekyll Snippets &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료&lt;br /&gt;
&lt;a href=&quot;https://packagecontrol.io/packages/Jekyll&quot;&gt;sublime-jekyll&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;https://packagecontrol.io/installation&quot;&gt;Install PackageControl&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 27 Apr 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/04/27/sublimeText-jekyll-plugin.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/04/27/sublimeText-jekyll-plugin.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Thread Dump 생성하기</title>
        <description>&lt;p&gt;해당 포스트는 이상민 강사님의 트러블슈팅 가이드 강의를 듣고 작성하였습니다.&lt;br /&gt;
덤프란 메모리상의 내용을 프린트나 파일로 출력하여 내용을 확인 할 수 있는 것을 말한다. 주로 오류 수정을 위해 원인을 파악하는데 이용이 된다. 
장애가 발생하였을 때 원인을 파악하기 위해 덤프파일을 생성하는 것이 중요하다.  &lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;쓰레드 덤프&lt;/h2&gt;

&lt;p&gt;쓰레드의 스택과 상태 정보를 파일로 출력한다.&lt;br /&gt;
쓰레드 덤프를 생성하는 시점의 쓰레드의 스택과 상태를 저장한다는 점에 유의 해야 한다.&lt;br /&gt;
따라서 쓰레드의 상태변화를 확인하기 위해서는 10~20초 간격으로 적어도 5~10번 정도로 덤프를 생성해야 한다.  &lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;쓰레드 덤프 생성 명령어&lt;/h2&gt;

&lt;h1 id=&quot;kill-&quot;&gt;kill 명령어&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; -3 pid 또는 &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; -quit pid&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;덤프파일은 해당 프로세스가 실행되는 콘솔이나 로그파일에 출력된다.&lt;br /&gt;
WAS(Tomcat)의 경우에는 catalina.out 파일에 덤프가 출력되는 것을 확인 할 수 있다.&lt;/p&gt;

&lt;p&gt;맥용 터미널 프로그램인 iTerm을 사용하면 쉽게 덤프파일을 로컬 환경에 저장 할 수 있다. 
	1. Shell &amp;gt; log &amp;gt; start
	2. 덤프 로그파일이 저장 될 경로와 파일명을 지정 
	3. 덤프 생성 명령어 수행 
	4. Sheell &amp;gt; log &amp;gt; stop 
	5. (2)에서 지정한 덤프 파일 경로에 덤프파일 확인 &lt;/p&gt;

&lt;h2 id=&quot;pid---&quot;&gt;pid 확인 하는 방법&lt;/h2&gt;

&lt;h1 id=&quot;ps-&quot;&gt;ps 명령어&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ps -ef &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep java&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ps 명령어는 현재 실행되고 있는 프로세스의 상태를 표시하는 명령어이다. 
파이프로 grep 사용하여 “java” 문자열을 포함하는 프로세스를 찾는다. 
- e: 모든 계쩡의 프로세스를 출력
- f: 프로세스의 자세한 정보를 출력 &lt;/p&gt;

&lt;p&gt;UID/pid/PPID/CSTIME/TTY/TIME/CMD 포맷으로 출력되므로 두번째 탭의 숫자값이 pid이다. &lt;/p&gt;

&lt;h1 id=&quot;jps-&quot;&gt;jps 명령어&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;jps pid&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;-v : 자세한 정보를 함께 출력
 jsp 명령어를 쳤을 때 process 명이 출력되지 않는 경우에는&lt;br /&gt;
 temp 에 저장되는 프로세스 정보가 없을 때 그렇게 나오게 된다. &lt;br /&gt;
 /tmp/hsperfdata_계정명/pid 파일에 프로세스의 정보가 계속해서 업데이트 되어 저장 된다.&lt;br /&gt;
 해당 파일이 삭제가 되거나 없다면 jps, jstat, jstack 과 같은 명령어을 사용 할 수 없다.&lt;/p&gt;

&lt;p&gt;쓰레드 덤프가 아래와 같이 출력된다.  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;2015-04-19 20:34:53 
Full thread dump Java HotSpot&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 64-Bit Server VM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;23.25-b01 mixed mode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:

&lt;span class=&quot;s2&quot;&gt;&amp;quot;ajp-bio-8001-exec-16&amp;quot;&lt;/span&gt; daemon &lt;span class=&quot;nv&quot;&gt;prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x00007fbded760000 &lt;span class=&quot;nv&quot;&gt;nid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x7fab waiting on condition &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00007fbe0c4b8000&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
   java.lang.Thread.State: WAITING &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;parking&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at sun.misc.Unsafe.park&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Native Method&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        - parking to &lt;span class=&quot;nb&quot;&gt;wait &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;  &amp;lt;0x00000000e35ebca8&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a java.util.concurrent.locks.AbstractQueuedSynchronizer&lt;span class=&quot;nv&quot;&gt;$ConditionObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at java.util.concurrent.locks.LockSupport.park&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;LockSupport.java:186&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at java.util.concurrent.locks.AbstractQueuedSynchronizer&lt;span class=&quot;nv&quot;&gt;$ConditionObject&lt;/span&gt;.await&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;

        
 ... &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;중간 생략 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&amp;quot;VM Thread&amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x00007fbe100b0000 &lt;span class=&quot;nv&quot;&gt;nid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x61be runnable 

&lt;span class=&quot;s2&quot;&gt;&amp;quot;VM Periodic Task Thread&amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x00007fbe10520000 &lt;span class=&quot;nv&quot;&gt;nid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x61d7 waiting on condition 

JNI global references: 386

Heap
 def new generation   total 184320K, used 110783K &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000d5600000, 0x00000000e1e00000, 0x00000000e1e00000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  eden space 163840K,  64% used &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000d5600000, 0x00000000dbc7b588, 0x00000000df600000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  from space 20480K,  28% used &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000df600000, 0x00000000dfbb48d8, 0x00000000e0a00000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  to   space 20480K,   0% used &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000e0a00000, 0x00000000e0a00000, 0x00000000e1e00000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 tenured generation   total 409600K, used 33182K &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000e1e00000, 0x00000000fae00000, 0x00000000fae00000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   the space 409600K,   8% used &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000e1e00000, 0x00000000e3e67938, 0x00000000e3e67a00, 0x00000000fae00000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 compacting perm gen  total 52288K, used 52123K &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000fae00000, 0x00000000fe110000, 0x0000000100000000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   the space 52288K,  99% used &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0x00000000fae00000, 0x00000000fe0e6f80, 0x00000000fe0e7000, 0x00000000fe110000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
No shared spaces configured.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;쓰레드 덤프 생성 시간 / JVM 정보가 출력이 되고 공백 라인으로 구분하여 각 쓰레드의 정보가 출력이 된다. 
마지막에는 Heap 영역 메모리의 사용현황이 출력된다. &lt;/p&gt;

&lt;p&gt;쓰레드 정보는 스페이스로 각 내용이 구분되어 진다.    &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;쓰레드 이름   &lt;/li&gt;
  &lt;li&gt;쓰레드 우선순위  &lt;/li&gt;
  &lt;li&gt;쓰레드 ID  &lt;/li&gt;
  &lt;li&gt;Natvie 쓰레드 ID  &lt;/li&gt;
  &lt;li&gt;쓰레드 상황  &lt;/li&gt;
  &lt;li&gt;쓰레드 스택 주소 범위 (from..to)  &lt;/li&gt;
  &lt;li&gt;쓰레드 스택 정보 (stack 이므로 가장 최근에 수행된 메소드가 상위에 위치한다. 가장 상위에 메소드가 수행 중인 상태에서 덤프가 시행된것.)  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Heap 영역의 정보에는 Eden, Tenured, Perm 영역의 사용량을 확인 할 수 있다. 
Eden 영역은 Young area 영역이라고도 하며, 객체가 생성되었을때 저장되는 heap 영역 중 일부이다. 
해당 영역이 꽉차게 되면 Young GC가 발생하며 살아 남은 객체는 Tenured 영역 (Old Area)로 옮겨진다.
Perm 영역은 로딩된 클래스, 메소드, meta 정보가 저장된다. &lt;/p&gt;

&lt;p&gt;Tenured, Perm 영역이 90% 이상으로 너무 높으면 out of memory error가 발생할 수 있다. &lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;쓰레드 덤프 분석&lt;/h2&gt;

&lt;p&gt;thread logic (https://java.net/projects/threadlogic) 을 이용하면 덤프 파일 분석을 편리하게 할 수 있다.&lt;br /&gt;
thread logic 을 다운로드 받으면 jar 파일을 다운로드 받을 수 있다.&lt;br /&gt;
해당 jar 파일을 아래의 명령어로 실행하면 thread logic을 실행 할 수 있다.  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;java -jar threadlogic.jar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료
&lt;a href=&quot;http://helloworld.naver.com/helloworld/textyle/10963&quot;&gt;스레드 덤프 분석하기&lt;/a&gt;
&lt;a href=&quot;https://java.net/downloads/threadlogic/ThreadLogic-v0.9.pdf&quot;&gt;ThreadLogic Documentation&lt;/a&gt;
자바 트러블 슈팅 가이드 (이상민님)&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 20 Apr 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/04/20/threaddump.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/04/20/threaddump.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>400 Bad request</title>
        <description>&lt;p&gt;설문 서비스를 개발하면서 설문지를 제출할 때 특정한 상황에서 계속해서 400 bad request가 발생하는 버그가 발생했다.&lt;br /&gt;
사용자가 작성한 동적인 설문지 폼이 생성되기 때문에 어떤 경우에 400 bad request가 발생하는지를 알아내기가 어려웠다. &lt;/p&gt;

&lt;p&gt;로그를 확인하여 해당 에러가 발생하는 원인을 찾기로 하고, log4j 의 spring 프레임워크 logger를 debug 모드로 변경하였다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[org.springframework.context.support.DefaultMessageSourceResolvable: codes [answerList.answerList[2].answerNumber,answerList[2].answerNumber]; arguments []; default message [answerList[2].answerNumber]]; default message [Failed to convert property value of type &amp;#39;java.lang.String&amp;#39; to required type &amp;#39;int&amp;#39; for property &amp;#39;answerList[2].answerNumber&amp;#39;; nested exception is java.lang.NumberFormatException: For input string: &amp;quot;&amp;quot;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;내용을 보니 answerList.answerNumber는 int형 프로퍼티인데 빈 문자열인 String “” 값이 input으로 오면서 Bind Error가 나오는 것을 확인 할 수 있었다.&lt;/p&gt;

&lt;p&gt;해당 버그는 이전에는 없었던 버그 내용인데 새로 발견되었으므로 최근에 작성한 소스코드에 문제가 있을 것이라 예상하여 
최근에 작업했던 코드를 확인 해보았다. &lt;/p&gt;

&lt;p&gt;문제가 발생했던 코드는 자바스크립트 코드에 있었다.&lt;/p&gt;

&lt;p&gt;특정상황에서 input 입력 컨트롤을 초기화하는 코드가 문제였다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAttr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;checked&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;text, textarea 같은 경우에는 빈 문자열로 초기화가 String형 프로퍼티에 바인딩 되어서 문제가 없었지만,
checkbox, radio 같은 경우에는 정수형 프로퍼티에 빈문자열이 바인딩 되면서 에러가 발생한 것이다. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;input[type=text], textarea&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;input[type=checkbox], input[type=radio]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAttr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;checked&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이렇게 따로 분리를 하여 초기화를 하니 해당 에러를 잡을 수 있었다.&lt;br /&gt;
에러의 원인은 간단하였는데 디버그 하는 과정이 어려웠던 경험이었다.&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Apr 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/04/13/400badrequest.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/04/13/400badrequest.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>브라우저 문서모드</title>
        <description>&lt;p&gt;과거 웹 표준이 정해져 있지 않았을 때 각 브라우저마다 페이지를 표시하는 렌더링이 규칙이 달랐고, 이 때문에 같은 소스코드 임에도 불구하고 페이지가 다르게 표시되는 문제가 있다.  &lt;/p&gt;

&lt;p&gt;최근에는 웹 표준을 지켜 코드를 작성하기 때문에 최신 브라우저라면 어떤 브라우저에서나 같은 페이지를 표시 할 수 있다.&lt;br /&gt;
하지만 오래된 웹 페이지의 경우에는 최신 브라우저에서 깨져 보이거나 브라우저마다 다르게 표시되는 문제가 있다. &lt;/p&gt;

&lt;p&gt;이런 문제를 해결하고자 임시 방편으로 문서 모드라는 것을 사용하여 두 가지 렌더링 모드를 지원하게 되었다.&lt;br /&gt;
두 가지 렌더링 모드에는 표준모드와 쿽스모드(quirks mode)가 있다.&lt;br /&gt;
쿽스 모드는 구식의 코드(웹 표준을 지키지 않은) 가 최신 브라우저에서 정상적으로 표시하기 위한 목적으로 생겼다.&lt;br /&gt;
브라우저는 소스코드에 doctype에 따라 두 가지 모드 중에 선택하여 페이지를 렌더링 하게 된다.  &lt;/p&gt;

&lt;p&gt;모드를 선택하는 방법은 각 브라우저 마다 DTD에 따라 문서모드가 선택된다. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Q : 쿽스모드(Quirks mode)&lt;/li&gt;
  &lt;li&gt;S : 표준모드(Standard mode)&lt;/li&gt;
  &lt;li&gt;A : Almost Standard mode &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Doctype&lt;/th&gt;
      &lt;th&gt;NS6&lt;/th&gt;
      &lt;th&gt;Old Moz&lt;/th&gt;
      &lt;th&gt;Moz &amp;amp;Safari &amp;amp;Opera 10&amp;amp;IE10&amp;amp; HTML&lt;/th&gt;
      &lt;th&gt;Opera 9.0&lt;/th&gt;
      &lt;th&gt;IE 8, IE 9 &amp;amp; Opera 9.5&lt;/th&gt;
      &lt;th&gt;IE 7 &amp;amp; Opera 7.10&lt;/th&gt;
      &lt;th&gt;IE 6 &amp;amp; Opera 7.0&lt;/th&gt;
      &lt;th&gt;Mac IE 5&lt;/th&gt;
      &lt;th&gt;Konq 3.2&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;lt;!DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 4.01//EN”&amp;gt;&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt;Q&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;이하 생략 (링크 내 테이블 참고)…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고: &lt;a href=&quot;https://hsivonen.fi/doctype/&quot;&gt;Handling of Some Doctypes in text/html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 06 Apr 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/04/06/htmldoctype.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/04/06/htmldoctype.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>AngularJS2</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.w3schools.com/angular/default.asp&quot;&gt;W3school Tutorial&lt;/a&gt; 따라 해보기 &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;angularjs-filter&quot;&gt;AngularJS Filter&lt;/h1&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;pipe(&lt;/td&gt;
      &lt;td&gt;)를 표현식에 사용하여 Filter를 적용 할 수 있다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;uppercase : 대문자&lt;br /&gt;
{{ person.name | uppercase}}&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lowercase : 소문자&lt;br /&gt;
{{ person.name | uppercase}}&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;currency : 통화 표시 &lt;br /&gt;
{{ quantity * price | currency }}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;통화 표시는 기본적으로는 웹 서버의 locale에 따라 표시가 된다. 
통화 표시를 지정하려면 이와 같이 해준다.&lt;br /&gt;
{{ quantity * price | currency : “원” }}&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Filter: 필터를 적용한다.&lt;/li&gt;
  &lt;li&gt;orderBy: 지정한 속성으로 정렬을 한다. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-controller=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;namesCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;inputVal&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-repeat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x in names | filter:inputVal | orderBy:&amp;#39;country&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/h1&gt;

&lt;p&gt;$http는 원격서버로 부터 데이터를 읽어 오기 위한 AngularJS Service 이다. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$http.get(url): url 서버로 부터 데이터를 가져오기 위한 메소드
(기본적으로 json 포맷으로 받도록 되어져 있다. xml 이나 다른 포맷의 데이터를 사용하려면 
http provider를 지정하여 사용하면 된다. )&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myApp&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-controller=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;customersCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-repeat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x in names&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myApp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;customersCtrl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.w3schools.com/angular/customers.php&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;$scope는 customerCtrl Controller 을 의미한다. &lt;/li&gt;
  &lt;li&gt;$http.get()으로 원격서버로 부터 데이터를 가져와서 $scope.names에 저장한다. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tables&quot;&gt;Tables&lt;/h1&gt;

&lt;p&gt;테이블 형태의 데이터를 출력할 때 &amp;lt;tr&amp;gt; 태그에 ng-repeat를 추가하여 데이터를 반복적으로 출력 할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-repeat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x in names | orderBy : &amp;#39;Country&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;위의 예제와 같이 파이를 사용하여 정렬하여 데이터를 출력할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;html-dom&quot;&gt;HTML DOM&lt;/h1&gt;
&lt;p&gt;HTML DOM elements의 attribute에 AngularJS 데이터를 바인딩하기 위한 Driective가 있다. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ng-disabled Directive
element의 disabled attribute 데이터를 바인딩 해준다. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-disabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mySwitch&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Click Me!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mySwitch&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Button
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;checkbox mySwitch model과 버튼과 바인딩되어 checbox의 상태에 따라 버튼이 활성/비활성화 된다. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ng-show &amp;amp; ng-hide Driective 
element의 display 속성을 바인딩한다. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-show=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I am visible.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-hide=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I am not visible.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;참고 자료&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;AngularJS API Doc: https://docs.angularjs.org/api&lt;br /&gt;
w3schools AngularJS: http://www.w3schools.com/angular/default.asp  &lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 06 Apr 2015 03:00:00 +0900</pubDate>
        <link>http://iyoon.github.io/jekyll/update/2015/04/06/angularjs2.html</link>
        <guid isPermaLink="true">http://iyoon.github.io/jekyll/update/2015/04/06/angularjs2.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
